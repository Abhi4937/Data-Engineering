Okay, hello, Cloud Gurus.
Congratulations, you're at the end
of the EC2 section of the course.
EC2 is one of the most important technologies
that you need to know going into your exam,
so let's review everything that we learned about EC2.
So what is EC2?
Well, it's like a virtual machine.
It's hosted in AWS instead of your own data center.
And you basically select the capacity
that you need right now,
and you can grow and shrink when you need to.
And you only pay for what you use,
and it takes only minutes to provision an EC2 instance,
not months.
So let's look at our four different
EC2 instance pricing options.
And you will be given scenario based questions,
and there will be quite a few of them,
and you have to select the best pricing.
So let's start with On-Demand.
This is where you pay by the second or the hour
depending on the type of instance that you run,
and it's great for flexibility,
no long-term contracts, et cetera, et cetera.
Spot, this is where you purchase unused capacity
at a discount of up to 90%,
and the prices fluctuate with supply and demand.
And it's great for applications
with flexible start and end times.
We then have Reserved instances,
and this is where you reserve your capacity
for one to three years, and the more you pay upfront,
the greater savings that you have.
And you can save up to 72% discount on the hourly charge,
and this is great if you've got known or fixed requirements.
And then finally, we've got Dedicated,
and this is a physical EC2 server
that's dedicated for your use.
And it's great if you have server bound licenses to reuse
or compliance requirements,
so perhaps government says
that you can't do it on multi-tenant hardware,
then you want Dedicated instances.
So you are going to probably get
at least four different scenario based questions,
where you have to select the right pricing option,
and you will have to select basically these four.
So make sure you know
what the different pricing options are going into your exam
and you know what their use cases are.
Moving on to the command lines,
the AWS command line interface.
So we learned
that you should always give your users least privilege.
So when we created our group,
we basically didn't give them administrative privileges,
we just gave them S3 administrative privilege.
So you always give your users
the minimum amount of access required to do their jobs,
and you should always use groups.
You should create IAM groups
and assign your users to groups.
And group permissions are assigned
using IAM policy documents,
and your users will automatically inherit
the permissions of the group.
So as soon as you add a user into the group,
that's where they're going to inherit
the permissions from that group.
Staying on the command line,
just remember these important AWS CLI tips.
So your secret access key, you'll only ever see this once.
If you lose it,
you can delete the access key ID and secret access key
and regenerate them,
but you're going to need to run the AWS configure again
and enter in your secret access key
as well as your access key id.
Don't share your key pairs.
So each developer should have
their own access key ID and secret access key,
so just like usernames and passwords,
you shouldn't be shared.
You should always have one key pair per human user.
And remember that the command line
is supported by Linux, Windows and macOS,
so you can install the CLI
on your Mac, Linux, or Windows pc,
and you can also use it on EC2 instances.
Moving on to roles, so roles are the preferred option.
If you can use roles from a security perspective,
then you should.
Avoid hard coding your credentials with roles.
You don't need to save access key IDs
and secret access keys into your code
in order to be able to access things like S3 from EC2.
Instead, you can basically create a role,
and that allows you to use other AWS services
without the use of access key IDs and secret access keys.
We then have policies.
So policies control a role's permission,
just like policies control
your user permissions and group permissions,
so it's exactly the same thing.
In terms of updates,
you can update a policy and attach it to a role,
and it will take effect immediately.
And attaching and detaching,
you can attach and detach a role to run an EC2 instance
without having to stop or terminate these instances.
Moving on to security groups.
So just remember,
that when you create a security group
and you make a change to the security group,
perhaps you add port 80 or port 443,
those changes will take effect immediately.
You can have any number of EC2 instances
within a security group,
and you can have multiple security groups
attached to EC2 instances.
Remember that when you create a security group,
all inbound traffic is blocked by default,
and all outbound traffic is allowed.
And moving on to bootstrap scripts,
so a bootstrap script is a script
that runs when the instance first runs.
It runs at root level,
so it has full administrative privileges,
and it passes user data to the EC2 instance
and can be used to install applications,
like our web servers, database servers,
as well as do updates and whatever else you want it to do
when you first boot that EC2 instance.
Now you will get bunch of scenario questions
where they're trying to confuse you
with user data and metadata.
So if you remember,
user data is simply your bootstrap scripts,
whereas metadata is data about your EC2 instances.
And you can use bootstrap scripts or user data
to access metadata, and that's what we did in that lab.
We basically ran a bootstrap script,
which got our public IP4 address,
and it made a little webpage telling us
what that IPv4 address is.
Moving on to networking with EC2.
So you're gonna get different scenarios on the exam,
and you'll be asked to choose the correct networking device.
So you need to understand
the three different networking devices
and what their use cases are.
So ENI, for example, this is for basic networking.
Perhaps you need a separate management network
from your production network
or a separate logging network
or maybe even something to monitor,
so you need it separate from your production network.
And you need to do this at low cost, so in this case,
you just are going to use
multiple elastic network interfaces for each network.
Enhanced networking.
This is for when you need speeds
between 10 gigabits per second and 100 gigabits per second,
basically, anywhere you need reliable and high throughput.
And then EFAs,
this is where you need to have high performance computing
and machine learning applications,
or you need to do an OS level bypass.
If you see a scenario question
talking about HPC or machine learning
and asking what network adapter you should use,
then you wanna choose EFA, elastic fabric adapter.
Moving on to our different types of placement groups,
so a placement group is just a logical grouping
of EC2 instances.
You can have cluster placement groups.
This is where you need low network latency
and high network throughput,
so again, for high performance computing.
Spread placement groups.
This is where you have
basically, key critical EC2 instances,
and you don't want them to be on the same hardware,
so you need to spread them around.
And then we've got our partition placement groups,
and this is where you've got multiple EC2 instances,
things like HDFS, HBase, and Cassandra.
So if you see any scenario-based questions
talking about those technologies,
you wanna put them on partition placement groups.
Moving on, things to remember for the exam
about placement groups.
Our cluster placement groups
can't span multiple availability zones,
where a spread placement group
and partition placement group can.
Only certain types of instances
can be launched into placement groups,
so this will be compute optimized, GPU optimized,
memory optimized, and storage optimized.
AWS always recommends homogenous instances
with clustered placement groups,
and you can't merge placement groups,
but you can move an existing instance
into a placement group.
Before you move the instance,
the instance must be in the stop state.
You can then move or remove an instance
using the AWS CLI or the SDK,
but you can't do it via the console just yet.
So moving on to Dedicated Hosts.
So any question that you see
that talks about special licensing requirements
or maybe even compliance requirements,
I want you to think of Dedicated Hosts.
An Amazon EC2 Dedicated Host
is a physical server with an EC2 instance capacity
that's fully dedicated for your use.
It's not shared hardware.
So Dedicated Hosts allow you to use
your existing per socket per call per VM software licenses,
including Windows Server, Microsoft SQL Server,
and SUSE Linux Enterprise server.
Remember, with Spot Instances and Spot Fleets,
that Spot Instances can save you
up to 90% of the cost of On-Demand Instances.
You can block Spot Instances from terminating
by using Spot block,
and it's useful for any type of computing
where you don't need persistent storage.
And then a Spot Fleet is a collection of Spot Instances
and optionally, On-Demand Instances.
Moving on to some newer topics
that were introduced recently to the exam.
So you can deploy vCenter on AWS using VMware,
and this is basically the perfect solution
for extending your private VMware cloud
onto the AWS public cloud.
And a common scenario for this might be
things like cloud migration
or just basically doing disaster recovery using AWS,
but you want all the native tools that come with VMware
and within vCenter itself.
So you can definitely do that.
And then, the last one is just about AWS Outpost.
So if you get a see a scenario question
about extending AWS to your data center,
just think of AWS Outposts as bringing AWS to you.
And essentially, there's two different family members.
There's AWS Outpost racks, this is for large deployments,
so these are 42U form factor racks
that will go inside a data center.
Whereas, AWS Outpost servers are for smaller deployments,
so this will be things like putting in a 1U server
inside a retail shop, for example.
So that is it for this lecture, everyone.
I hope you've had lots of fun learning about EC2.
If you have any questions, please let me know.
If not, feel free to move on to the next section.
Thank you.